[user]
	name = Sean Leather

[core]
	excludesfile = ~/.gitignore_global

[color]
	diff = auto
	status = auto
	branch = auto

[alias]
	st = status
	ls = ls-files
	untracked = ls-files -o --exclude-standard
	lo = log
	lop = log -p
	lor = log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"
	g = grep
	di = diff
	dt = difftool
	co = checkout
	ci = commit
	br = branch -vv
	rem = remote -v
	up = "!git remote update -p; git merge --ff-only @{u}"
	# fixws: Fix trailing whitespace in the index
	#
	# Source: http://stackoverflow.com/a/15398512/545794
	#
	# The 'git stash save' fails if the tree is clean (instead of
	# creating an empty stash :P). So, we only 'stash' and 'pop' if
	# the tree is dirty.
	#
	# The 'git rebase --whitespace=fix HEAD~' throws away the commit
	# if it's empty, and adding '--keep-empty' prevents the whitespace
	# from being fixed. So, we first check that the index is dirty.
	#
	# Also:
	# - '(! git diff-index --quiet --cached HEAD)' is true (zero) if
	#   the index is dirty
	# - '(! git diff-files --quiet .)' is true if the tree is dirty
	#
	# The 'rebase --whitespace=fix' trick is from here:
	# http://stackoverflow.com/a/19156679/470844
	fix-ws = !"\
	  if (! git diff-files --quiet .) && \
	     (! git diff-index --quiet --cached HEAD); then \
	    git commit -m FIXWS_SAVE_INDEX && \
	    git stash save FIXWS_SAVE_TREE && \
	    git rebase --whitespace=fix HEAD~ && \
	    git stash pop && \
	    git reset --soft HEAD~; \
	  elif (! git diff-index --quiet --cached HEAD); then \
	    git commit -m FIXWS_SAVE_INDEX && \
	    git rebase --whitespace=fix HEAD~ && \
	    git reset --soft HEAD~; \
	  fi"

[push]
	# Always assume current branch for pushing
	default = current
	# Always push tags
	followTags = true

[branch]
	autosetuprebase = always

[include]
	path = .gitconfig.local

[diff]
	tool = vimdiff
	renames = true

[merge]
	# Only allow a fast-forward merge. Override with --ff if desired.
	ff = only
